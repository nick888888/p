package pt

import (
	"fmt"
)

const ( //"const"关键字是定义一个常量。
	PI = 3.1415926
	E  = 2.0
	g  = 9.8
)

const (
	RED   = 10 * iota //"iota"关键字帮你自动从0，1,2......依次开始递增
	GREEN
	BLUE
)

func Pconst() {
	fmt.Println(RED, GREEN, BLUE) //0 10 20

	var (
		n   int
		f   float32
		f_1 float32
	)
	n = 10

	f = float32(n) / 3   //"n=10"属于“int”类型，int是整数类型，float32是浮点数类型，两者必须转换成一致的，不然会报错。因为Golang是强类型语言。这也是它的特点之一。
	fmt.Println("aaa",f, n)  //aaa 3.3333333 10

	f_1 = float32(n / 3)   //"n / 3"的结果是"3",因为int的类型是个整数，所以被整数三除了之后应该还是整数。
	fmt.Println(f_1)  //这里显示3
	fmt.Println(f_1 * 3)  //这里显示9

	n = int(f_1 * 3) //同左不同右，我们可以把右边的float32类型转换成int类型
	fmt.Println(n)  //这里显示9

	var (
		n1 int64
		n2 int8
	)
	n1 = 2222222221024004
	n2 = int8(n1) //要注意的是int8的取值范围是[-128到127]，总共255个数字。它会从这个数组的从右往左取数字，最多也就占3位，尽管你前面有再多的数字对其都是无用的。
	fmt.Println(n1, n2) //2222222221024004 4

	n1 = 1024129
	n2 = int8(n1) //看完上面的例子你也，你也应该明白了，在其取值范围是会取得这个数字，如果不在的话渠道的数字也是有问题的！(数字128已经超出其正数的取值范围，它又从-128到0这个段开始取值。)因此在转换的时候要留心哟。
	fmt.Println(n1, n2)  //1024129 -127
}

//#以上代码输出结果如下：
//0 10 20
//3.3333333 10
//3
//9
//9
//2222222221024004 4
//1024129 -127
